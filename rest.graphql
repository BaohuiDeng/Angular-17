type Author {
  bio: String
  following: Boolean
  image: String
  username: String
}

type Article {
  author: Author
  body: String
  createdAt: DateTime
  description: String
  favorited: Boolean
  favoritesCount: Int
  slug: String
  tagList: [String]
  title: String
  updatedAt: DateTime
}

type CurrentUser {
  bio: String
  email: String
  image: String
  token: String
  username: String
}

input ArticleInput {
  title: String!
}

type GlobalFeed {
  articles: [Article]
  articlesCount: Int
}

type debug {
  args: JSON
  data: JSON
  files: JSON
  form: JSON
  headers: JSON
  json: JSON
  method: String
  url: String
}

type Query {
  globalFeed(limit: Int!, offset:Int!): GlobalFeed
    @rest(
      endpoint: "https://api.realworld.io/api/articles?limit=$limit&offset=$offset"
    )
  article(slug: String!): Article
    @rest(
      endpoint: "https://api.realworld.io/api/articles/Explore-implementations-1"
      resultroot: "article"
    )
}

type Mutation {
  register(username: String!, email: String!, password: String!): CurrentUser
    @rest(
      method: POST
      endpoint: "https://api.realworld.io/api/users"
      postbody: "{\"user\":{\"email\":\"{{.Get \"email\"}}\",\"password\":\"{{.Get \"password\"}}\",\"username\":\"{{.Get \"username\"}}\"}}"
      resultroot: "user"
    )
  login(email: String!, password: String!): CurrentUser
    @rest(
      method: POST
      endpoint: "https://api.realworld.io/api/users/login"
      postbody: "{\"user\":{\"email\":\"{{.Get \"email\"}}\",\"password\":\"{{.Get \"password\"}}\"}}"
      resultroot: "user"
    )
  createArticle(title: String!, description: String, body: String, token: String!): Article
    @rest(
      method: POST
      endpoint: "https://api.realworld.io/api/articles"
      headers: [{ name: "Authorization", value: "Token $token"}]
      postbody: "{\"article\":{\"title\":\"{{.Get \"title\"}}\",\"description\":\"{{.Get \"description\"}}\",\"body\":\"{{.Get \"body\"}}\"}}"
      resultroot: "article"
    )
}
