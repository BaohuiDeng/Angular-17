type Author {
  bio: String
  following: Boolean
  image: String
  username: String
}

type Article {
  author: Author
  body: String
  createdAt: DateTime
  description: String
  favorited: Boolean
  favoritesCount: Int
  slug: String
  tagList: [String]
  title: String
  updatedAt: DateTime
}

type GlobalFeed {
  articles: [Article]
  articlesCount: Int
}

type CurrentUser {
  bio: String
  email: String
  image: String
  token: String
  username: String
}


type Query {
  globalFeed (limit: Int!, offset: Int!): GlobalFeed
    @rest(
      endpoint: "https://api.realworld.io/api/articles?limit=$limit&offset=$offset"
    )

  article(slug: String!): Article
    @rest(
      endpoint: "https://api.realworld.io/api/articles/$slug"
      resultroot: "article"
    )
}

type Mutation {
  register(username: String!, email: String!, password: String!): CurrentUser
    @rest(
      endpoint: "https://api.realworld.io/api/users",
      method: POST,
      postbody: "{\"user\": {\"username\": \"{{.Get \"username\"}}\", \"email\": \"{{.Get \"email\"}}\", \"password\": \"{{.Get \"password\"}}\"}}",
      resultroot: "user"
    )

  createArticle(title: String!, description: String, body: String, token: String!): Article
    @rest(
      endpoint: "https://api.realworld.io/api/articles",
      method: POST,
      headers: [{name: "Authorization", value: "Token $token"}]
      postbody: "{\"article\":{\"title\":\"{{.Get \"title\"}}\",\"description\":\"{{.Get \"description\"}}\",\"body\":\"{{.Get \"body\"}}\"}}",
      resultroot: "article"
    )
}
